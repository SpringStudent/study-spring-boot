spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=1qaz@WSX
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
server.context-path=/study

spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=0

#该配置并没有像MYSQL或者Redis一样，提供了连接池配置的功能
spring.data.mongodb.uri=mongodb://gyadmin:Gy(!Djz!852@192.168.1.231:27017/feedback
spring.data.mongodb.option.min-connection-per-host=0
spring.data.mongodb.option.max-connection-per-host=100
spring.data.mongodb.option.threads-allowed-to-block-for-connection-multiplier=5
spring.data.mongodb.option.server-selection-timeout=30000
spring.data.mongodb.option.max-wait-time=120000
spring.data.mongodb.option.max-connection-idle-time=0
spring.data.mongodb.option.max-connection-life-time=0
spring.data.mongodb.option.connect-timeout=10000
spring.data.mongodb.option.socket-timeout=0

spring.data.mongodb.option.socket-keep-alive=false
spring.data.mongodb.option.ssl-enabled=false
spring.data.mongodb.option.ssl-invalid-host-name-allowed=false
spring.data.mongodb.option.always-use-m-beans=false

spring.data.mongodb.option.heartbeat-socket-timeout=20000
spring.data.mongodb.option.heartbeat-connect-timeout=20000
spring.data.mongodb.option.min-heartbeat-frequency=500
spring.data.mongodb.option.heartbeat-frequency=10000
spring.data.mongodb.option.local-threshold=15

spring.datasource.first.url=jdbc:mysql://localhost:3306/test1
spring.datasource.first.username=root
spring.datasource.first.password=1qaz@WSX
spring.datasource.first.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.second.url=jdbc:mysql://localhost:3306/test2
spring.datasource.second.username=root
spring.datasource.second.password=1qaz@WSX
spring.datasource.second.driver-class-name=com.mysql.jdbc.Driver

ning.zhou.user=zhouning
ning.zhou.age=26
ning.zhou.user.info=${ning.zhou.user}years old${ning.zhou.age}

spring.aop.auto=true
spring.aop.proxy-target-class=true

spring.mail.host=smtp.163.com
spring.mail.username=18356070692@163.com
spring.mail.password=bigfacecat1993
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#控制台打印并格式化sql
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.rabbitmq.host=192.168.1.234
spring.rabbitmq.port=5672
spring.rabbitmq.username=gymqadmin
spring.rabbitmq.password=gymqadmin1397
spring.rabbitmq.virtual-host=INFO

#用来配置该监控项是否属于敏感信息，访问敏感信息需要用户具有ACTUATOR角色权限，或者使用以下配置关闭安全限制
management.security.enabled=false
endpoints.shutdown.enabled=true
#其中包含了关于branch和commit的基础信息。而这个信息格式是最简模式，我们也可以通过配置下面的参数来获取更全面的git信息：
#重启应用后再访问/info端点，可以获得类似下面更为详细的版本信息了。
management.info.git.mode=full

flyway.enabled=false
flyway.locations=classpath:/db

cas.server.url.prefix=http://192.168.1.232:8081/cas
server.name=http://192.168.3.94:8080/study/
cas.server.login.url=http://192.168.1.232:8081/cas/login

#当前服务/应用的名字
dubbo.application.name=user-service-provider
#注册中心的协议和地址
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
#通信规则（通信协议和接口）
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
#连接监控中心
dubbo.monitor.protocol=registry

